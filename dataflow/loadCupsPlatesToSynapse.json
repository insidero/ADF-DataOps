{
	"name": "loadCupsPlatesToSynapse",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "iri_sink_dataset",
						"type": "DatasetReference"
					},
					"name": "CupsPlatesSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "cups_plates_synapse_dataset",
						"type": "DatasetReference"
					},
					"name": "CupsPlatesSink"
				}
			],
			"transformations": [
				{
					"name": "ReplaceSpaceWithUnderScore"
				},
				{
					"name": "NewColumnState"
				},
				{
					"name": "RearrangeColumn"
				}
			],
			"script": "source(output(\n\t\tDate as string,\n\t\tCounty as string,\n\t\t{Product Category} as string,\n\t\t{Product Brand} as string,\n\t\t{In Stock Rate} as string,\n\t\t{Agg Weight} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\twildcardPaths:['cups_plates*.csv']) ~> CupsPlatesSource\nCupsPlatesSource select(mapColumn(\n\t\teach(patternMatch(`.*`),\n\t\t\tregexReplace($$,' ','_') = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ReplaceSpaceWithUnderScore\nReplaceSpaceWithUnderScore derive(State = right(County, 2),\n\t\tCounty = left(County, length(County)-2)) ~> NewColumnState\nNewColumnState select(mapColumn(\n\t\tDate,\n\t\tCounty,\n\t\tState,\n\t\tProduct_Category,\n\t\tProduct_Brand,\n\t\tIn_Stock_Rate,\n\t\tAgg_Weight\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RearrangeColumn\nRearrangeColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CupsPlatesSink"
		}
	}
}